// <auto-generated />
using System;
using ExerciseApplicationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseApplicationServices.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230208073315_CreatedInitialDatabase")]
    partial class CreatedInitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseApplicationService.Models.ExerciseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<int>("CaloriesBurnedGoal")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseTypeId");

                    b.HasIndex("WorkoutRecordId");

                    b.ToTable("ExerciseDatas");
                });

            modelBuilder.Entity("ExerciseApplicationService.Models.ExerciseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExerciseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExerciseTypes");
                });

            modelBuilder.Entity("ExerciseApplicationService.Models.WorkoutRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WorkoutRecords");
                });

            modelBuilder.Entity("ExerciseApplicationService.Models.ExerciseData", b =>
                {
                    b.HasOne("ExerciseApplicationService.Models.ExerciseType", "ExerciseType")
                        .WithMany("ExerciseDatas")
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExerciseApplicationService.Models.WorkoutRecord", "WorkoutRecord")
                        .WithMany("ExerciseDatas")
                        .HasForeignKey("WorkoutRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseType");

                    b.Navigation("WorkoutRecord");
                });

            modelBuilder.Entity("ExerciseApplicationService.Models.ExerciseType", b =>
                {
                    b.Navigation("ExerciseDatas");
                });

            modelBuilder.Entity("ExerciseApplicationService.Models.WorkoutRecord", b =>
                {
                    b.Navigation("ExerciseDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
